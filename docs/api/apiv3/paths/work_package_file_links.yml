# /api/v3/work_packages/{id}/file_links
---
post:
  summary: Creates file links.
  operationId: Work_Package_Create_File_Links
  tags:
    - Work Packages
    - File links
  description: |-
    Creates file links on a work package.

    The request body must contain the generated storage token, and not the storage id. In addition, the request must
    send the origin file id, name, and mime type.

    The request should also send the origin meta data: _createdAt_, _createdByName_, _lastModifiedAt_,
    _lastModifiedByName_. As it is possible to link folders from a storage to a work package, the _mimeType_ of this
    entity can be empty.

    Up to 20 file links can be submitted at once. If there is already a link on the given work package with the same
    file id from the same storage, the previous data is not overwritten.

    If some data is invalid, no file links will be created.

    If a file link with matching origin id, work package, and storage already exists, then it will not create an
    additional file link or update the metadata. Instead the information from the existing file line will be returned.
  parameters:
    - name: id
      description: Work package id
      in: path
      required: true
      schema:
        type: integer
      example: 1337
  requestBody:
    content:
      application/json:
        schema:
          $ref: '../components/schemas/file_links_model.yml'
        example:
          _type: Collection
          _embedded:
            elements:
              - originData:
                  id: 5503
                  name: logo.png
                  mimeType: image/png
                  createdAt: '2021-12-19T09:42:10.170Z'
                  lastModifiedAt: '2021-12-20T14:00:13.987Z'
                  createdByName: Luke Skywalker
                  lastModifiedByName: Anakin Skywalker
                _links:
                  storageUrl:
                    href: https://nextcloud.deathstar.rocks/

  responses:
    '201':
      description: Created
      content:
        application/hal+json:
          schema:
            $ref: '../components/schemas/file_links_model.yml'
    '400':
      content:
        application/hal+json:
          schema:
            $ref: "../components/schemas/error_response.yml"
          example:
            _type: Error
            errorIdentifier: urn:openproject-org:api:v3:errors:InvalidRequestBody
            message: The request body was invalid.
      description: Occurs when the client did not send a valid JSON object in the request body.
    '403':
      content:
        application/hal+json:
          schema:
            $ref: "../components/schemas/error_response.yml"
          example:
            _type: Error
            errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
            message: You are not authorized to access this resource.
      description: |-
        Returned if the client does not have sufficient permissions.

        **Required permission:** manage file links

        *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
    '404':
      content:
        application/hal+json:
          schema:
            $ref: "../components/schemas/error_response.yml"
          example:
            _type: Error
            errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
            message: The requested resource could not be found.
      description: |-
        Returned if the work package does not exist or the client does not have sufficient permissions to see it.

        **Required permission:** view work package, view file links
    '422':
      content:
        application/hal+json:
          schema:
            $ref: "../components/schemas/error_response.yml"
          example:
            _type: Error
            errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
            message: The request was invalid. File Link logo.png - Storage was invalid.
      description: |-
        Occurs if the request body was correctly formatted, but some properties lead to errors in the validation
        process. This happens e.g. if the provided storage url is not available on the server.

get:
  summary: Gets all file links of a work package
  operationId: Work_Package_Get_File_Links
  tags:
    - Work Packages
    - File links
  description: |-
    Gets all file links of a work package.
  parameters:
    - name: id
      description: Work package id
      in: path
      required: true
      schema:
        type: integer
      example: 1337
  responses:
    '200':
      description: OK
      content:
        application/hal+json:
          schema:
            $ref: '../components/schemas/file_links_model.yml'
    '403':
      content:
        application/hal+json:
          schema:
            $ref: "../components/schemas/error_response.yml"
          example:
            _type: Error
            errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
            message: You are not authorized to access this resource.
      description: |-
        Returned if the client does not have sufficient permissions.

        **Required permission:** view file links

        *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
    '404':
      content:
        application/hal+json:
          schema:
            $ref: "../components/schemas/error_response.yml"
          example:
            _type: Error
            errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
            message: The requested resource could not be found.
      description: |-
        Returned if the work package does not exist or the client does not have sufficient permissions to see it.

        **Required permission:** view work package
